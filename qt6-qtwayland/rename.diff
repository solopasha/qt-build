diff --git a/src/client/qwaylandplatformservices.cpp b/src/client/qwaylandplatformservices.cpp
index e0eb690d..74d8c2e2 100644
--- a/src/client/qwaylandplatformservices.cpp
+++ b/src/client/qwaylandplatformservices.cpp
@@ -26,7 +26,7 @@ bool QWaylandPlatformServices::openUrl(const QUrl &url)
         windowManagerIntegration->openUrl(url);
         return true;
     }
-    return QGenericUnixServices::openUrl(url);
+    return QDesktopUnixServices::openUrl(url);
 }
 
 bool QWaylandPlatformServices::openDocument(const QUrl &url)
@@ -35,7 +35,7 @@ bool QWaylandPlatformServices::openDocument(const QUrl &url)
         windowManagerIntegration->openUrl(url);
         return true;
     }
-    return QGenericUnixServices::openDocument(url);
+    return QDesktopUnixServices::openDocument(url);
 }
 
 QString QWaylandPlatformServices::portalWindowIdentifier(QWindow *window)
diff --git a/src/client/qwaylandplatformservices_p.h b/src/client/qwaylandplatformservices_p.h
index f8b09cca..017d2228 100644
--- a/src/client/qwaylandplatformservices_p.h
+++ b/src/client/qwaylandplatformservices_p.h
@@ -16,7 +16,7 @@
 //
 
 #include <QtCore/QMap>
-#include <QtGui/private/qgenericunixservices_p.h>
+#include <QtGui/private/qdesktopunixservices_p.h>
 
 #include <QtWaylandClient/private/qwayland-qt-windowmanager.h>
 #include <QtWaylandClient/qtwaylandclientglobal.h>
@@ -29,7 +29,7 @@ class QWaylandAppMenu;
 class QWaylandDisplay;
 class QWaylandWindow;
 
-class Q_WAYLANDCLIENT_EXPORT QWaylandPlatformServices : public QGenericUnixServices
+class Q_WAYLANDCLIENT_EXPORT QWaylandPlatformServices : public QDesktopUnixServices
 {
 public:
     explicit QWaylandPlatformServices(QWaylandDisplay *waylandDisplay);
diff --git a/src/client/qwaylandwindow.cpp b/src/client/qwaylandwindow.cpp
index 7b46ba22..54cddf68 100644
--- a/src/client/qwaylandwindow.cpp
+++ b/src/client/qwaylandwindow.cpp
@@ -1065,7 +1065,7 @@ bool QWaylandWindow::createDecoration()
             }
 
             if (targetKey.isEmpty()) {
-                auto unixServices = dynamic_cast<QGenericUnixServices *>(
+                auto unixServices = dynamic_cast<QDesktopUnixServices *>(
                     QGuiApplicationPrivate::platformIntegration()->services());
                 const QList<QByteArray> desktopNames = unixServices->desktopEnvironment().split(':');
                 if (desktopNames.contains("GNOME")) {
